/*
 * 中信云平台供应商适配器管理内部API
 * 中信云供应商适配器API定义了供应商/租户/用户管理、服务管理、计费管理等功能模块构成的中信云平台与供应商适配器之间的协议。适配器应在一个URI（统一资源标识符）下实现多个HTTP或HTTPS接入点。一个适配器可以提供多个供应商，每个供应商可包括多个服务（一个供应商的服务仅能存在于一个适配器中）。理想状态是，一个适配器仅包含一个供应商，及其全部服务。适配器应该是可以水平弹性扩展的。多个中信云平台部署实例可以用不同的地址和授权访问同一个适配器.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.oracle.citiccloud.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.oracle.citiccloud.model.ConfigOption;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * Operations
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-05-17T12:22:27.214+08:00")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class Operations   {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("display_name")
  private String displayName = null;

  @JsonProperty("config_url")
  private String configUrl = null;

  @JsonProperty("config_options")
  private List<ConfigOption> configOptions = null;

  public Operations name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 名称
   * @return name
  **/
  @JsonProperty("name")
  @ApiModelProperty(required = true, value = "名称")
  @NotNull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Operations displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * 显示名称
   * @return displayName
  **/
  @JsonProperty("display_name")
  @ApiModelProperty(required = true, value = "显示名称")
  @NotNull
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public Operations configUrl(String configUrl) {
    this.configUrl = configUrl;
    return this;
  }

   /**
   * 自定义的操作配置界面URL
   * @return configUrl
  **/
  @JsonProperty("config_url")
  @ApiModelProperty(value = "自定义的操作配置界面URL")
  public String getConfigUrl() {
    return configUrl;
  }

  public void setConfigUrl(String configUrl) {
    this.configUrl = configUrl;
  }

  public Operations configOptions(List<ConfigOption> configOptions) {
    this.configOptions = configOptions;
    return this;
  }

  public Operations addConfigOptionsItem(ConfigOption configOptionsItem) {
    if (this.configOptions == null) {
      this.configOptions = new ArrayList<ConfigOption>();
    }
    this.configOptions.add(configOptionsItem);
    return this;
  }

   /**
   * Get configOptions
   * @return configOptions
  **/
  @JsonProperty("config_options")
  @ApiModelProperty(value = "")
  public List<ConfigOption> getConfigOptions() {
    return configOptions;
  }

  public void setConfigOptions(List<ConfigOption> configOptions) {
    this.configOptions = configOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Operations operations = (Operations) o;
    return Objects.equals(this.name, operations.name) &&
        Objects.equals(this.displayName, operations.displayName) &&
        Objects.equals(this.configUrl, operations.configUrl) &&
        Objects.equals(this.configOptions, operations.configOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, displayName, configUrl, configOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Operations {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    configUrl: ").append(toIndentedString(configUrl)).append("\n");
    sb.append("    configOptions: ").append(toIndentedString(configOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

